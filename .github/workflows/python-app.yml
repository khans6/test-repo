# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Set env
      run: |
        echo "GITHUB_ARTIFACT_VERSION=$(source version.txt && echo $VERSION)" >> $GITHUB_ENV
    - name: Run python script
      run: |
        echo $GITHUB_ARTIFACT_VERSION
        python3 test.py
    - uses: "marvinpinto/action-automatic-releases@latest"
      if: ${{ github.head_ref == *"release"* || github.ref_name == *"release"* }}
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: ${{ env.GITHUB_ARTIFACT_VERSION }}
        prerelease: false
        title: "Test release ${{ env.GITHUB_ARTIFACT_VERSION }}"
        files: |
          *.py
